Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 
ii. Business table = 10000 
iii. Category table = 10000 
iv. Checkin table = 10000 
v. elite_years table = 10000 
vi. friend table = 10000 
vii. hours table = 10000 
viii. photo table = 10000 
ix. review table = 10000 
x. tip table = 10000 
xi. user table = 10000 
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 (id)
ii. Hours = 1562 (business_id)
iii. Category = 2643 (business_id)
iv. Attribute = 1115 (business_id)
v. Review = 10000 (id),	8090 (business_id), 9581 (user_id)
vi. Checkin = 493 (business_id)
vii. Photo = 10000 (id),	
viii. Tip = 537	(user_id), 3979 (business_id)
ix. User = 10000 (id)
x. Friend = 11 (user_id)
xi. Elite_years = 2780 (user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
		select id, name, review_count, yelping_since, useful, funny, cool, fans, average_stars, 
			   compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, 
			   compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos
		from  user
		where 	id is null
				or name is null
				or review_count is null
				or yelping_since is null
				or useful is null
				or funny is null
				or cool is null
				or fans is null
				or average_stars is null
				or compliment_hot is null
				or compliment_more is null
				or compliment_profile is null
				or compliment_cute is null
				or compliment_list is null
				or compliment_note is null
				or compliment_plain is null
				or compliment_cool is null
				or compliment_funny is null
				or compliment_writer is null
				or compliment_photos is null
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1	  max: 5    avg: 3.7082 
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0  max: 5.0  avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0	  max: 2    avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1	  max: 53   avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0    max: 2000 avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: 
					   select city, sum(review_count) as tot_count
					   from business
					   group by city
					   order by tot_count desc
	
	
	Copy and Paste the Result Below:
					  +-----------------+-----------+
					  | city            | tot_count |
					  +-----------------+-----------+
					  | Las Vegas       |     82854 |
					  | Phoenix         |     34503 |
					  | Toronto         |     24113 |
					  | Scottsdale      |     20614 |
					  | Charlotte       |     12523 |
					  | Henderson       |     10871 |
					  | Tempe           |     10504 |
					  | Pittsburgh      |      9798 |
					  | Montréal        |      9448 |
					  | Chandler        |      8112 |
					  | Mesa            |      6875 |
					  | Gilbert         |      6380 |
					  | Cleveland       |      5593 |
					  | Madison         |      5265 |
					  | Glendale        |      4406 |
					  | Mississauga     |      3814 |
					  | Edinburgh       |      2792 |
					  | Peoria          |      2624 |
					  | North Las Vegas |      2438 |
					  | Markham         |      2352 |
					  | Champaign       |      2029 |
					  | Stuttgart       |      1849 |
					  | Surprise        |      1520 |
					  | Lakewood        |      1465 |
					  | Goodyear        |      1155 |
					  +-----------------+-----------+
					  (Output limit exceeded, 25 of 362 total rows shown)
		
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer: 
				   select stars, count(stars)
				   from business
				   where city == "Avon"
				   group by stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
										 +-------+--------------+
										 | stars | count(stars) |
										 +-------+--------------+
										 |   1.5 |            1 |
										 |   2.5 |            2 |
										 |   3.5 |            3 |
										 |   4.0 |            2 |
										 |   4.5 |            1 |
										 |   5.0 |            1 |
										 +-------+--------------+



ii. Beachwood

SQL code used to arrive at answer:
				   select stars, count(stars)
				   from business
				   where city == "Beachwood"
				   group by stars
				   


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
										+-------+--------------+
										| stars | count(stars) |
										+-------+--------------+
										|   2.0 |            1 |
										|   2.5 |            1 |
										|   3.0 |            2 |
										|   3.5 |            2 |
										|   4.0 |            1 |
										|   4.5 |            2 |
										|   5.0 |            5 |
										+-------+--------------+
   										
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
					   +--------+--------------+
					   | name   | review_count |
					   +--------+--------------+
					   | Gerald |         2000 |
					   | Sara   |         1629 |
					   | Yuri   |         1339 |
					   +--------+--------------+ 
					   
	
		
	Copy and Paste the Result Below:  
					   select name, review_count
					   from user
					   order by review_count desc 
					   limit 3
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
				Running the below query : 

				select avg( (review_count - avg_x) * (fans - avg_y) )*avg( (review_count - avg_x) * (fans - avg_y) )/(var_x*var_y) as R2 
				from user, (select 
      				      avg_x,
      				      avg_y,
      				      avg((review_count - avg_x)*(review_count - avg_x)) as var_x, 
      				      avg((fans - avg_y)*(fans - avg_y)) as var_y 
      				      from user, (select 
          					avg(review_count) as avg_x, 
          					avg(fans) as avg_y 
          					from user)
  				);
				
				We get the following :
							+----------------+
							|             R2 |
							+----------------+
							| 0.437136492915 |
							+----------------+
					According to the table above the correlation between the 2 columns is 0.437 whis is small.

				                                                                       	
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:  
			+-----------+-----------+
			| love_text | hate_text |
			+-----------+-----------+
			|      1780 |       232 |
			+-----------+-----------+
                         More words with love text!                            

	 
	SQL code used to arrive at answer: 
					   select (select count(text)
				                   from review
				                   where text like "%love%") as  love_text, 

			                          (select count(text) 
				                  from review
				                  where text like "%hate%") as hate_text
					   

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
					  select name, fans
					  from user
					  order by fans desc 
					  limit 10
	
	
	Copy and Paste the Result Below:
					 +-----------+------+
					 | name      | fans |
					 +-----------+------+
					 | Amy       |  503 |
					 | Mimi      |  497 |
					 | Harald    |  311 |
					 | Gerald    |  253 |
					 | Christine |  173 |
					 | Lisa      |  159 |
					 | Cat       |  133 |
					 | William   |  126 |
					 | Fran      |  124 |
					 | Lissa     |  120 |
					 +-----------+------+
					

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
For this problem I chose the city of Las Vegas and the category Food. 

i. Do the two groups you chose to analyze have a different distribution of hours?


Yes, stars distribution shown in the table below 
							


ii. Do the two groups you chose to analyze have a different number of reviews?


Yes, review count shown in the table below

         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

SQL code used for analysis:  
				select b.city, c.category , b.stars, count(b.stars) as count_stars, sum(b.review_count) as sum_review_count
				from business b, category c
				where b.city in ("Las Vegas") and c.category == 'Food'
				group by b.stars

				Output : 
				+-----------+----------+-------+-------------+------------------+
				| city      | category | stars | count_stars | sum_review_count |
				+-----------+----------+-------+-------------+------------------+
				| Las Vegas | Food     |   1.0 |       10625 |            57375 |
				| Las Vegas | Food     |   1.5 |       14025 |           380800 |
				| Las Vegas | Food     |   2.0 |       31450 |           788375 |
				| Las Vegas | Food     |   2.5 |       53125 |          2059550 |
				| Las Vegas | Food     |   3.0 |       86700 |          3639700 |
				| Las Vegas | Food     |   3.5 |      111350 |          8332550 |
				| Las Vegas | Food     |   4.0 |      118150 |         10679400 |
				| Las Vegas | Food     |   4.5 |      113050 |          7566275 |
				| Las Vegas | Food     |   5.0 |      124950 |          1708925 |
				+-----------+----------+-------+-------------+------------------+

				

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
The open business(1) have more count stars, count_stars column
         
         
ii. Difference 2:
The open business(1) have more reviews (sum), sum_review_count column 
         
Also, the open business(1) have a little higher average star rating from the not open businesses(0), avg_star column. 
         
SQL code used for analysis:
				select is_open, count(stars) as count_stars, sum(review_count) as sum_review_count, avg(stars) as avg_star
				from business
				group by is_open
				
				Output:
				+---------+-------------+------------------+---------------+
				| is_open | count_stars | sum_review_count |      avg_star |
				+---------+-------------+------------------+---------------+
				|       0 |        1520 |            35261 | 3.52039473684 |
				|       1 |        8480 |           269300 | 3.67900943396 |
				+---------+-------------+------------------+---------------+

				

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

I want to open a "Coffe & Tea" shop in one of the cities ("Las Vegas", "Toronto", "Edinburgh") 
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

For this data I used the business and category tables and calculated the # of shops, avg_stars, sum of reviews for each city. It appears that Edinburg has fewer shops that are higher
and maybe is better to open the shop there. (This analysis offcourse is very simplistic as I couldn't create a view of the table below and calcualte other statistics
					     as for example "Average population per coffee shop = n_shops / city population" but it's only for demonstration. )            
                  
iii. Output of your finished dataset:
					
								+-----------+--------------+---------+---------------+-------------+
								| city      | category     | n_shops |     avg_stars | sum_reviews |
								+-----------+--------------+---------+---------------+-------------+
								| Edinburgh | Coffee & Tea |   21988 | 3.79916317992 |      256864 |
								| Las Vegas | Coffee & Tea |  143612 | 3.74311338885 |     7622568 |
								| Toronto   | Coffee & Tea |   90620 | 3.54568527919 |     2218396 |
								+-----------+--------------+---------+---------------+-------------+
         
         
iv. Provide the SQL code you used to create your final dataset:
								select b.city, c.category, count(c.category) as n_shops, avg(b.stars) as avg_stars, sum(review_count) as sum_reviews
								from business as b, category as c
								where b.city in ("Las Vegas", "Toronto", "Edinburgh") and c.category == "Coffee & Tea" 
								group by b.city, c.category
								order by avg_stars desc
								

Thank you for reviewing!

